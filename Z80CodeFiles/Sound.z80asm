; ----------------------------------------------------------------------------------------------------------------------
; Sound.z80asm
; Coded with BeepFX player tool by Shiru: https://opengameart.org/content/zx-spectrum-beeper-sound-effects
; ----------------------------------------------------------------------------------------------------------------------

; ----------------------------------------------------------------------------------------------------------------------
; Sound_FX: play a sound effect (tone) defined by many parameters
; 
; Input:    IX - pointer to tone parameters
; Output:   -
; Destroys: HL, BC, DE, IY, A
; ----------------------------------------------------------------------------------------------------------------------
Sound_FX:
                        di                                  ; disable interrupts

                        ld      c, (ix+0)                   ; BC = frames
                        ld      b, (ix+1)
                        ld      e, (ix+2)                   ; DE = frame length
                        ld      d, (ix+3)

                        push    de
                        pop     iy                          ; store frame length in IY

                        ld      e, (ix+4)                   ; DE = pitch
                        ld      d, (ix+5)
                        ld      a, (ix+8)                   ; A = duty
                        ld      (@Tone_Duty+1), a           ; save duty
                        ld      hl, 0                       ; reset HL
Sound_FX_Frames
                        push    bc                          ; store frames

                        push    iy
                        pop     bc                          ; restore frame length in BC
Sound_FX_FrameLength
                        add     hl, de                      ; HL = incremented pitch
                        ld      a, h                        ; set high-byte in A
@Tone_Duty
                        cp      0                           ; compares with duty (set/reset carry flag)
                        sbc     a, a                        ; substract with carry
                        and     16                          ; mask result
                        out     (254), a                    ; play sound
                        dec     bc                          ; decrement frame length
                        ld      a, b
                        or      c
                        jr      nz, Sound_FX_FrameLength    ; repeat "frame length" times

                        ld      a, (@Tone_Duty+1)           ; get duty change
                        add     a, (ix+9)                   ; add duty slide
                        ld      (@Tone_Duty+1), a           ; update duty
                        ld      c, (ix+6)                   ; BC = pitch slide
                        ld      b, (ix+7)
                        ex      de, hl                      ; HL = pitch
                        add     hl, bc                      ; add pitch slide
                        ex      de, hl                      ; DE = incremented pitch
                        pop     bc                          ; restore frames
                        dec     bc                          ; decrement frames
                        ld      a, b
                        or      c
                        jr      nz, Sound_FX_Frames         ; repeat "frames" times

                        ei                                  ; enable interrupts
                        ret
